<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                        http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.stdx</groupId>
        <artifactId>stdx</artifactId>
        <version>1.5.0</version>
    </parent>

    <properties>
        <jersey.version>1.8</jersey.version>
    </properties>

    <!-- Eindeutige Defintion des Artefakts ueber group- artifactId und version 
  		Mit diesen Angaben kann dieses Artefakt in jedem anderen maven-Projekt als 
  		Abhaengikeit (dependeny verwendet werden) -->
    <groupId>edu.htwm.vsp</groupId>
    <artifactId>phonebook</artifactId>
    <version>0.1-SNAPSHOT</version>

    <!-- Das packaging gibt an, um welchen Artefakttyp es sich handelt. Der 
  		Wert "pom" erstellt ein Parent-Project -> also eine Art gemeinsames Oberprojekt 
  		mit der Moeglichkeit Kindprojekte abzuleiten, die dann Werte des Elternprojekts 
  		uebernehmen. Der Standardwert ist "jar" - er muss deshalb nicht angegeben 
  		werden -->
    <packaging>pom</packaging>

    <!-- Der Named des Projekts ist optional. Der Standardwert ist die artifactId -->
    <name>Parent Project for an online telephone book</name>


    <!-- Module definieren Kind-Projekte, die beim Build mit gebaut werden. 
  		Der Name des Moduls muss dem Verzeichnisnamen entsprechen -->
    <modules>
        <module>phonebook.services.core</module>
        <module>phonebook.services.rest</module>
        <!-- <module>phonebook.services.rest.client</module> -->
    </modules>

    <!-- Mit dependencies werden Abhaengigkeiten bestimmt. Abhengigkeiten sind 
  		Bibliotheken, die zur Laufzeit oder auch fuer das Testen der Anwendung benoetigt 
  		werden. Dependencies werden eindeutig durch groupId, artifactId und version 
  		bestimmt. Dependencies koennen wiederum Abhaengigkeiten haben. Diese Abhaengigkeiten 
  		werden von maven zur Compile-Zeit aufgeloest. Dieses Depedency-Management 
  		ermoeglicht eine einfache Einbindung und Verwaltung von Abhengigkeiten. -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
    </dependencies>

    <!-- Maven ist komponentenorientiert aufgebaut. Die Komponenten derer sich 
  		maven bedient um einen Build zu erstellen heissen "plugins". Viele Einstellungen 
  		werden ueber diese Plugins vorgenommen. Maven bietet lediglich die "Laufzeitumgebung" 
  		fuer diese plugins. -->

</project>

